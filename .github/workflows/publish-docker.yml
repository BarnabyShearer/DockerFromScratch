name: Publish Docker image

on:
  push:
    tags: [ 'v*' ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v2
      - uses: docker/login-action@v1.10.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/setup-qemu-action@v1.2.0
        with:
          platforms: linux/arm64
      - uses: docker/setup-buildx-action@v1.6.0
      - uses: docker/bake-action@v1.6.0
        with:
          targets: python
          set: |
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max

  publish:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        flavor:
        - python
        - uwsgi
        - nginx
        - postgres
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v2
      - uses: docker/login-action@v1.10.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - uses: docker/login-action@v1.10.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/metadata-action@v3.6.0
        id: meta
        with:
          images: |
            ${{ github.repository }}
            ghcr.io/${{ github.repository }}
          flavor: |
            latest=${{ matrix.flavor == 'python' }}
            suffix=-${{ matrix.flavor }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
      - uses: docker/setup-qemu-action@v1.2.0
        with:
          platforms: linux/arm64
      - uses: docker/setup-buildx-action@v1.6.0
      - uses: docker/bake-action@v1.6.0
        with:
          push: true
          files: |
            ./docker-bake.hcl
            ${{ steps.meta.outputs.bake-file }}
          targets: ${{ matrix.flavor }}
          set: |
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max
